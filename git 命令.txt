git branch -a 	查看当前项目git分支
git checkout hzgaoxin 	切换到某个分支
//提交过程
git pull origin hzgaoxin 	拉取远端hzgaoxin分支代码到本地
git add .  	本地代码提交到缓存库
git commit -m 	'提交注释'
git push origin hzgaoxin  	提交动作 把本地分支更改提交到远程hzgaoxin分支
git push -u origin master 	第一次提交到远程库，之后只需执行git push
git rm 	删除文件
git checkout -- ceshi.txt 	将工作去的文件替换成暂存区的文件
git add * 	会忽略.ignore文件里面的内容
git checkout -b dev	创建一个dev分支，并指向dev分支
git branch 	查看分支
git log 	模式下按q退出
git stash 	暂存当前分支下的进程
git stash list 	查看暂存的内容
git stash apply 	恢复内容，但是git stash list里面内容不删除
git stash drop	删除list里面内容
git stash pop	执行上面两步
git stash apply stash@{0}	恢复某个stash
git cherry-pick <commit>	复制某个特定的提交到当前分支上
git branch -d 分支名称		删除本地分支
git branch -d 分支名称		“强制”删除本地分支
git push origin --delete 分支名称	删除远程分支
拉取远端仓库代码后需要在本地建一个分支，最好名称一样
git branch --set-upstream branch-name origin/branch-name	建立本地分支和远程分支的关联
git tag <>创建一个标签
git tag 查看所有标签
git log --pretty=oneline --abbrev-commit 查看log历史
git tag v0.9 f52c633	为这次提交增加一个标签
git show <tagname>	查看标签信息
git tag -a v0.1 -m "version 0.1 released" 1094adb 创建一个带有文字说明的标签
git tag -d <tag> 删除一个标签
git push origin <tag>	将标签推送到远程库
git push origin --tags	将所有标签推送到远程库
git push origin :refs/tags/<tags> 从远程库删除标签
git remote rm origin 删除远程库
git remote add origin <远程库地址>	关联一个远程库
git remote -v 查看远程库信息
git add -f <文件名> 强制添加文件到监控文件内
git config --global alias.st status 以st命令代替status命令
git reset HEAD file 把已经放入暂存区的修改撤销掉